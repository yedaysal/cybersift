version: '3.7'

services:

  # The 'setup' service runs a one-off script which initializes users inside
  # Elasticsearch — such as 'kibana_system' — with the values of the passwords
  # defined in the '.env' file.
  #
  # This task only needs to be performed once, during the *initial* startup of
  # the stack. Any subsequent run will reset the passwords of existing users to
  # the values defined inside the '.env' file, and the built-in roles to their
  # default permissions.
  #
  # By default, it is excluded from the services started by 'docker compose up'
  # due to the non-default profile it belongs to. To run it, either provide the
  # '--profile=setup' CLI flag to Compose commands, or "up" the service by name
  # such as 'docker compose up setup'.
  setup:
    profiles:
      - setup
    build:
      context: setup/
      args:
        ELASTIC_VERSION: {{ elastic_version }}
    init: true
    environment:
      ELASTIC_PASSWORD: {{ elasticsearch_password }}
      KIBANA_SYSTEM_PASSWORD: {{ kibana_system_password }}
    volumes:
      - ./setup/entrypoint.sh:/entrypoint.sh:ro,Z
      - ./setup/lib.sh:/lib.sh:ro,Z
      - ./setup/roles:/roles:ro,Z
    networks:
      - docker_elastic
    depends_on:
      - elasticsearch

  elasticsearch:
    build:
      context: elasticsearch/
      args:
        ELASTIC_VERSION: {{ elastic_version }}
    environment:
      node.name: elasticsearch
      ES_JAVA_OPTS: -Xms512m -Xmx512m
      ELASTIC_PASSWORD: {{ elasticsearch_password }}
      discovery.type: single-node
    ports:
      - "{{ elasticsearch_host_port }}:{{ elasticsearch_container_port }}"
    volumes:
      - ./elasticsearch/config/elasticsearch.yml:/usr/share/elasticsearch/config/elasticsearch.yml:ro,Z
      - elasticsearch:/usr/share/elasticsearch/data:Z
    networks:
      - docker_elastic
    restart: unless-stopped

  kibana:
    build:
      context: kibana/
      args:
        ELASTIC_VERSION: {{ elastic_version }}
    environment:
      KIBANA_SYSTEM_PASSWORD: {{ kibana_system_password }}
    ports:
      - "{{ kibana_host_port }}:{{ kibana_container_port }}"
    volumes:
      - ./kibana/config/kibana.yml:/usr/share/kibana/config/kibana.yml:ro,Z
    depends_on:
      - elasticsearch
    networks:
      - docker_elastic
    restart: unless-stopped

networks:
  docker_elastic:
    external: true

volumes:
  elasticsearch:
