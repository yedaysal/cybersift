---
# tasks file for docker_monitoring

- name: Ensure /opt/cybersift/docker_monitoring directory exists
  file:
    path: "{{ stack_path }}"
    state: directory

- name: Ensure stack compose file exists on the target server
  copy:
    src: "{{ role_path }}/files/docker-compose.yml"
    dest: "{{ stack_path }}"

- name: Ensure the stack is up
  shell: "docker-compose up -d"
  args:
    chdir: "{{ stack_path }}"

- name: Ensure Telegraf repository is installed
  shell: wget -q https://repos.influxdata.com/influxdata-archive_compat.key ; echo '393e8779c89ac8d958f81f942f9ad7fb82a25e133faddaf92e15b16e6ac9ce4c influxdata-archive_compat.key' | sha256sum -c && cat influxdata-archive_compat.key | gpg --dearmor | sudo tee /etc/apt/trusted.gpg.d/influxdata-archive_compat.gpg > /dev/null ; echo 'deb [signed-by=/etc/apt/trusted.gpg.d/influxdata-archive_compat.gpg] https://repos.influxdata.com/debian stable main' | sudo tee /etc/apt/sources.list.d/influxdata.list

- name: Ensure apt cache is updated
  apt:
    update_cache: yes

- name: Ensure Telegraf is installed
  apt:
    name: telegraf
    state: present

- name: Ensure telegraf.conf is copied
  copy:
    src: "{{ role_path }}/files/telegraf.conf"
    dest: "/etc/telegraf/"
    owner: root
    group: root
    mode: '0644'
  notify: Restart telegraf

- name: Ensure Telegraf service is enabled and started
  service:
    name: telegraf
    enabled: true
    state: started

- name: Ensure Grafana admin user password is changed
  uri:
    url: "http://localhost:3000/api/user/password"
    user: "{{ vault.grafana_security.admin_user }}"
    password: "admin"
    force_basic_auth: true
    method: PUT
    body_format: json
    body: >
      {
        "oldPassword":"admin",
        "newPassword":"{{ vault.grafana_security.admin_password }}"
      }

- name: Check if Grafana InfluxDB datasource exists
  uri:
    url: "http://localhost:3000/api/datasources/name/InfluxDB"
    user: "{{ vault.grafana_security.admin_user }}"
    password: "{{ vault.grafana_security.admin_password }}"
    force_basic_auth: true
    method: GET
    status_code: [200, 404]
  register: datasource_check

- name: Ensure Grafana InfluxDB datasource is added
  grafana_datasource:
    grafana_url: "http://localhost:3000"
    grafana_user: "{{ vault.grafana_security.admin_user }}"
    grafana_password: "{{ vault.grafana_security.admin_password }}"
    org_id: "1"
    name: "InfluxDB"
    ds_type: "influxdb"
    access: "proxy"
    ds_url: "http://influxdb:8086"
    database: "influx"
  when: datasource_check.status != 200
  register: influxdb_ds_result

- name: Ensure telegraf dashboard json exists on the target server
  template:
    src: "telegraf-system-metrics.json.j2"
    dest: "/tmp/telegraf-system-metrics.json"

- name: Ensure 'Telegraf - system metrics' dashboard exists
  grafana_dashboard:
    grafana_url: "http://localhost:3000"
    grafana_user: "{{ vault.grafana_security.admin_user }}"
    grafana_password: "{{ vault.grafana_security.admin_password }}"
    path: "/tmp/telegraf-system-metrics.json"
    commit_message: Updated by ansible
    state: present
    overwrite: true